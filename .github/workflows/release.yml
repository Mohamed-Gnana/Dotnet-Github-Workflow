name: Publish NuGet Package

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x'

      - name: Restore dependencies
        run: dotnet restore
        working-directory: Sample/

      - name: Build
        run: dotnet build --no-restore --configuration Release
        working-directory: Sample/

      - name: Test
        run: dotnet test --no-restore --verbosity normal
        working-directory: Sample/

      - name: Pack NuGet package
        run: dotnet pack --no-build --no-restore ./Sample p:NuspecFile=".Nuget/Sample.Nuspec" --configuration Release --output .


      - name: Get package version
        id: get_version
        run: echo "##[set-output name=VERSION;]$(cat **/*.csproj | grep '<Version>' | sed -E 's/.*<Version>(.+)<\/Version>.*/\1/')"

      - name: Publish NuGet package
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_PAT }}
        run: |
          # Find the NuGet package file(s)
          PACKAGE=$(find . -name "*.nupkg" | head -n 1) # Adjust if necessary to match your package file name pattern
          
          # Check if a package file was found
          if [ -z "$PACKAGE" ]; then
            echo "No NuGet package files found."
            exit 1
          fi
          
          # Push the NuGet package
          dotnet nuget push "$PACKAGE" -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json
      
      - name: Create GitHub Tag
        id: create_tag
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          tag: ${{ steps.get_version.outputs.VERSION }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${tag#v}" \
              --generate-notes
